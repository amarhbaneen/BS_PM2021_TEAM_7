  
pipeline {
    agent none
    stages {

        stage('Build') {
            agent {
                docker {
                    image 'amarhabneen/bm_team7'
                }
            }
            steps {
		    withEnv(["HOME=${env.WORKSPACE}"]) {
					
               
		sh 'pip install -r requirements.txt'
					
		    }
            }

        }
      stage('Test') {
            agent {
                docker {
                    image 'amarhabneen/bm_team7'
                }
            }
            steps {
		      withEnv(["HOME=${env.WORKSPACE}"]) {
                sh 'python manage.py test'
		      }
            }
	 

        }
	stage('mkr') {
            agent {
                docker {
                    image 'amarhabneen/bm_team7'
                }
            }
            steps {
		      withEnv(["HOME=${env.WORKSPACE}"]) {
              			 junit allowEmptyResults: true, testResults: 'unittest.xml'
		      }
            }
	}
    post {
		failure{
			mail to: 'amaralzana@gmail.com',
			subject: "Failed: Job '${env.JOB_NAME}' ['${env.BUILD_NUMBER}']",
			body: "Failed: Job '${env.JOB_NAME}' ['${env.BUILD_NUMBER}']: Check console output at '${env.BUILD_URL}' '${env.JOB_NAME}' ['${env.BUILD_NUMBER}']"
		}
		success{
			mail to: 'amaralzana@gmail.com',
			subject: "SUCCESS: Job '${env.JOB_NAME}' ['${env.BUILD_NUMBER}']",
			body: "SUCCESS: Job '${env.JOB_NAME}' ['${env.BUILD_NUMBER}']: Check console output at '${env.BUILD_URL}' '${env.JOB_NAME}' ['${env.BUILD_NUMBER}']"
		}
		always{
			deleteDir()
		}
    
    }
}
